swagger: '2.0'
info:
  version: '1'
  title: Device inventory
  description: |
    An API for device attribute management and device grouping. Intended for use by the web GUI.

    Devices can upload vendor-specific attributes (software/hardware info, health checks, metrics, etc.) of various data types to the backend.

    This API enables the user to:
    * list devices with their attributes
    * search devices by attribute value
    * use the results to create and manage device groups for the purpose of deployment scheduling

basePath: '/api/management/v1/inventory'
host: 'hosted.mender.io'
schemes:
  - https

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  ManagementJWT:
    type: apiKey
    in: header
    name: Authorization
    description: |
      API token issued by User Authentication service.
      Format: 'Bearer [JWT]'

paths:
  /devices:
    get:
      operationId: List Device Inventories
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: List devices inventories
      description:  |
        Returns a paged collection of devices and their attributes.
        Accepts optional search and sort parameters.

        **Searching**
        Searching by attributes values is accomplished by appending attribute
        name/value pairs to the query string, e.g.:
        `GET /devices?attr_name_1=foo&attr_name_2=100`
      parameters:
        - name: page
          in: query
          description: Starting page.
          required: false
          type: number
          format: integer
          default: 1
        - name: per_page
          in: query
          description: Maximum number of results per page.
          required: false
          type: number
          format: integer
          default: 10
        - name: sort
          in: query
          description: |
            Sort devices by attribute.
            The parameter is formatted as a comma-separated list of attribute
            names and sort order.

            The order direction (`ord`) must be either `asc` or `desc` for
            ascending and descending respectively.
            Defaults to `desc` if not specified.

            For example: `?sort=attr1:asc,attr2:desc`
            will sort by 'attr1' ascending, and then by 'attr2' descending.
          required: false
          type: string
          format: "attr[:ord][,attr[:ord]...]"
        - name: has_group
          in: query
          description: Limit result to devices assigned to a group.
          required: false
          type: boolean
        - name: group
          in: query
          description: Limits result to devices in the given group.
          required: false
          type: string
      responses:
        200:
          description: Successful response.
          headers:
            Link:
              type: string
              description: >
                Standard page navigation header,
                supported relations: 'first', 'next', and 'prev'.
            X-Total-Count:
              type: string
              description: Total number of devices found
          schema:
            title: ListOfDevices
            type: array
            items:
              $ref: '#/definitions/DeviceInventory'
          examples:
            application/json:
              - id: "291ae0e5956c69c2267489213df4459d19ed48a806603def19d417d004a4b67e"
                attributes:
                  - name: "ip_addr"
                    scope: "inventory"
                    value: "1.2.3.4"
                    description: "IP address"
                  - name: "mac_addr"
                    scope: "inventory"
                    value: "00.01:02:03:04:05"
                    description: "MAC address"
                updated_ts: "2016-10-03T16:58:51.639Z"
              - id: "76f40e5956c699e327489213df4459d1923e1a806603def19d417d004a4a3ef"
                attributes:
                  - name: "mac"
                    scope: "inventory"
                    value: "00:01:02:03:04:05"
                    description: "MAC address"
                updated_ts: "2016-10-04T18:24:21.432Z"
        400:
          description: Missing or malformed request parameters.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'

  /devices/{id}:
    get:
      operationId: Get Device Inventory
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Get a selected device's inventory
      parameters:
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
      responses:
        200:
          description: Successful response - the device was found.
          schema:
            $ref: "#/definitions/DeviceInventory"
          headers:
            ETag:
              type: string
              description: |
                  Contains the device object's current ETag.
                  Applicable only to attributes with 'tags' scope, changing other attributes doesn't affect the ETag.
          examples:
            application/json:
              id: "291ae0e5956c69c2267489213df4459d19ed48a806603def19d417d004a4b67e"
              attributes:
                - name: "ip_addr"
                  scope: "inventory"
                  value: "1.2.3.4"
                  description: "IP address"
                - name: "mac_addr"
                  scope: "inventory"
                  value: "00.01:02:03:04:05"
                  description: "MAC address"
                - name: "environment"
                  scope: "tags"
                  value: "test"
                  description: "Test environment"
                  timestamp: "2016-10-19T17:23:01.639Z"
              updated_ts: "2016-10-03T16:58:51.639Z"
        404:
          description: The device was not found.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: Delete Device Inventory
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Remove selected device's inventory
      parameters:
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
      responses:
          204:
            description: Device removed
          500:
            description: Internal server error.
            schema:
              $ref: "#/definitions/Error"

  /devices/{id}/tags:
    patch:
      operationId: Add Tags
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Adds a set of tags for a device
      description: |
        Saves the provided tags set for the authenticated device.

        This method has upsert semantic:
        * it overwrites the values of existing attributes
        * it creates attributes assigned for the first time
      parameters:
        - name: If-Match
          in: header
          description: Contains the device object's current ETag, and performs the update only if it matches the one stored in the database.
          type: string
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: tags
          in: body
          description: A list of tag descriptors.
          required: true
          schema:
            title: ListOfTags
            type: array
            items:
              $ref: '#/definitions/Tag'
            example:
              - name: "location"
                value: "germany"
                description: "Germany region"
              - name: "environment"
                value: "test"
      responses:
        200:
          description: Tags were updated successfully.
        400:
          description: Missing or malformed request params or body. See the error message for details.
        404:
          description: The device was not found.
          schema:
            $ref: "#/definitions/Error"
        412:
          description: ETag doesn't match.
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: Assign Tags
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Replace the set of tags for a device
      description: |
        Replaces the tags associated to the device.

        This method replaces all the tags with the new set:
        * it removes from the db the attributes not provided
        * it overwrites the values of existing attributes
        * it creates attributes assigned for the first time
      parameters:
        - name: If-Match
          in: header
          description: Contains the device object's current ETag, and performs the update only if it matches the one stored in the database.
          type: string
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: tags
          in: body
          description: A list of tags descriptors.
          required: true
          schema:
            title: ListOfTags
            type: array
            items:
              $ref: '#/definitions/Tag'
            example:
              - name: "location"
                value: "germany"
                description: "Germany region"
              - name: "environment"
                value: "test"
      responses:
        200:
          description: Tags were updated successfully.
        400:
          description: Missing or malformed request params or body. See the error message for details.
        404:
          description: The device was not found.
          schema:
            $ref: "#/definitions/Error"
        412:
          description: ETag doesn't match.
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"

  /devices/{id}/group:
    get:
      operationId: Get Device Group
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Get a selected device's group
      parameters:
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
      responses:
        200:
          description: >
            Successful response.
            If the device is not assigned to any group,
            the 'group' field will be set to 'null'.
          schema:
            $ref: "#/definitions/Group"
        400:
          description: Missing or malformed request params or body. See the error message for details.
        404:
          description: The device was not found.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: Assign Group
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Add a device to a group
      description: |
        Adds a device to a group.

        Note that a given device can belong to at most one group.
        If a device already belongs to some group, it will be moved
        to the selected one.
      parameters:
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: group
          in: body
          description: Group descriptor.
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        204:
          description: Success - the device was added to the group.
        400:
          description: Missing or malformed request params or body. See the error message for details.
        404:
          description: The device was not found.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"

  /devices/{id}/group/{name}:
    delete:
      operationId: Clear Group
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Remove a device from a group
      description: |
        Removes the device with identifier 'id' from the group 'group'.
      parameters:
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: name
          in: path
          description: Group name.
          required: true
          type: string
      responses:
        204:
          description: The device was successfully removed from the group.
        404:
          description: The device was not found or doesn't belong to the group.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'

  /groups:
    get:
      operationId: List Groups
      tags:
        - Management API
      security:
        - ManagementJWT: []

      summary: List all groups existing device groups
      parameters:
        - name: status
          in: query
          description: Show groups for devices with the given auth set status.
          required: false
          type: string
      responses:
        200:
          description: Successful response.
          schema:
            type: array
            items:
              title: ListOfGroupNames
              description: Group name
              type: string
          examples:
            application/json:
              - "staging"
              - "testing"
              - "production"
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

  /groups/{name}:
    delete:
      operationId: Remove a Group
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Remove a device group
      description: |
        Removes a device group. This API provides a bulk alternative to
        DELETE /devices/{id}/group/{name} for managing device groups.
      parameters:
        - name: name
          in: path
          description: Group name.
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            description: |
              JSON object listing how many devices were updated.
            type: object
            required:
              - updated_count
            properties:
              updated_count:
                type: number
                description: |
                  Number of devices for which the group was cleared sucessfully.
          examples:
            application/json:
              updated_count: 2
        400:
          description: Invalid request schema.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The group was not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

  /groups/{name}/devices:
    get:
      operationId: Get Devices in Group
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: List the devices belonging to a given group
      parameters:
        - name: page
          in: query
          description: Starting page.
          required: false
          type: integer
          default: 1
        - name: per_page
          in: query
          description: Maximum number of results per page.
          required: false
          type: integer
          default: 10
        - name: name
          in: path
          description: Group name.
          required: true
          type: string
      responses:
        200:
          description: Successful response
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
            X-Total-Count:
              type: string
              description: Custom header indicating the total number of devices in the given group
          schema:
            title: ListOfIDs
            type: array
            items:
              type: string
        400:
          description: Invalid request parameters.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The group was not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

    patch:
      operationId: Add Devices to Group
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Add devices to group
      description: |
        Appends the list of devices in the request body to the given group.
        For devices already present in the group the operation has no effect.
      parameters:
        - name: name
          in: path
          description: Group name.
          required: true
          type: string
        - name: DeviceIDs
          description: JSON list of device IDs to append to the group.
          in: body
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Successful response
          schema:
            description: |
              JSON object listing how many devices were updated.
            type: object
            required:
              - updated_count
              - matched_count
            properties:
              updated_count:
                type: number
                description: |
                  Number of devices listed that changed group.
              matched_count:
                type: number
                description: |
                  Number of devices listed that matched a valid device id internally.
          examples:
            application/json:
              updated_count: 2
              matched_count: 3
        400:
          description: Invalid request schema.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The group was not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      operationId: Remove Devices from Group
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Clear devices' group
      description: |
        Removes a list of devices from the specified group.
      parameters:
        - name: name
          in: path
          description: Group name.
          required: true
          type: string
        - name: DeviceIDs
          description: JSON list of device IDs to remove from the group.
          in: body
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Successful response
          schema:
            description: |
              JSON object listing how many devices were updated.
            type: object
            required:
              - updated_count
            properties:
              updated_count:
                type: number
                description: |
                  Number of devices for which the group was cleared sucessfully.
          examples:
            application/json:
              updated_count: 2
        400:
          description: Invalid request schema.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The group was not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

definitions:
  Attribute:
    description: Attribute descriptor.
    type: object
    required:
      - name
      - scope
      - value
    properties:
      name:
        type: string
        description: |
            A human readable, unique attribute ID, e.g. 'device_type', 'ip_addr', 'cpu_load', etc.
      scope:
        type: string
        description: |
            The scope of the attribute.

            Scope is a string and acts as namespace for the attribute name.
      description:
        type: string
        description: Attribute description.
      value:
        type: string
        description: |
            The current value of the attribute.

            Attribute type is implicit, inferred from the JSON type.

            Supported types: number, string, array of numbers, array of strings.
            Mixed type arrays are not allowed.
      timestamp:
        type: string
        format: date-time
        description: |
            The date and time of last tag update in RFC3339 format.
    example:
      name: "ip_addr_eth"
      description: "Device IP address on ethernet interface"
      value: "127.0.0.1"
      timestamp: "2016-10-19T17:23:01.639Z"
  Tag:
    description: Tag descriptor.
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: |
            Tag is an attribute with 'tags' scope.

            A human readable, unique tag ID, e.g. 'location', 'environment', etc.
      description:
        type: string
        description: Tag description.
      value:
        type: string
        description: The current value of the tag.
      timestamp:
        type: string
        format: date-time
        description: |
            The date and time of last tag update in RFC3339 format.
    example:
      name: "environment"
      description: "Test environment"
      value: "test"
      timestamp: "2016-10-19T17:23:01.639Z"
  DeviceInventory:
    type: object
    properties:
      id:
        type: string
        description: Mender-assigned unique device ID.
      updated_ts:
        type: string
        description: Timestamp of the most recent attribute update.
      attributes:
        type: array
        items:
          $ref: '#/definitions/Attribute'
        description: A list of attribute descriptors.
    example:
      id: "291ae0e5956c69c2267489213df4459d19ed48a806603def19d417d004a4b67e"
      attributes:
        - name: "ip_addr"
          value: "1.2.3.4"
          description: "IP address"
        - name: "mac_addr"
          value: "00.01:02:03:04:05"
          description: "MAC address"
      updated_ts: "2016-10-03T16:58:51.639Z"
  Group:
    type: object
    properties:
      group:
        type: string
        description: Device group.
    required:
      - group
    example:
      group: "staging"
  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      error: "failed to decode device group data: JSON payload is empty"
      request_id: "f7881e82-0492-49fb-b459-795654e7188a"
