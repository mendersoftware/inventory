swagger: '2.0'
info:
  version: '2'
  title: Device inventory filters and search
  description: |
    An API for inventory-based filters management and device search.
    It is intended for use by the web GUI.

    Devices can upload vendor-specific attributes (software/hardware info, health checks, metrics, etc.) of various data types to the backend as scoped attributes.

    This API enables the user to:
    * search devices by inventory scoped attribute value
    * use the results to create and manage device groups for deployment scheduling

basePath: '/api/management/v2/inventory'
host: 'hosted.mender.io'
schemes:
  - https

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  ManagementJWT:
    type: apiKey
    in: header
    name: Authorization
    description: |
      API token issued by User Authentication service.
      Format: 'Bearer [JWT]'

paths:
  /filters/attributes:
    get:
      operationId: Get filterable attributes
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Get the list of filterable inventory attributes
      description:  |
        Returns a list of filterable inventory attributes.

        The list is sorted in descending order by the count of occurrences of the
        attribute in the inventory database, then in ascending order by scope and name.

        Limitations:
         * The API considers up to a sample of 5,000 devices when aggregating the number of attributes.
         * The API returns up to 500 unique attributes.
      responses:
        200:
          description: Successful response.
          schema:
            title: List of filter attributes
            type: array
            items:
              $ref: '#/definitions/FilterAttribute'

        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'

  /filters/search:
    post:
      operationId: Search Device Inventories
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Search devices based on inventory attributes
      description:  |
        Returns a paged collection of devices and their attributes.

        If multiple filter predicates are specified, the filters are
        combined using boolean `and` operator.
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: The search and sort parameters of the filter
          schema:
            type: object
            properties:
              page:
                type: number
                format: integer
                default: 1
                description: Starting page.
              per_page:
                type: number
                format: integer
                default: 10
                description: Maximum number of results per page.
              text:
                type: string
                description: Free-text search query
              filters:
                type: array
                description: List of filter predicates.
                items:
                  $ref: '#/definitions/FilterPredicate'
              sort:
                type: array
                description: List of ordered sort criterias
                items:
                  $ref: '#/definitions/SortCriteria'
              attributes:
                type: array
                description: List of attributes to select and return
                items:
                  $ref: '#/definitions/SelectAttribute'

      responses:
        200:
          description: Successful response.
          headers:
            Link:
              type: string
              description: >
                Standard header used for page navigation,
                page relations: 'first', 'next' and 'prev'.
            X-Total-Count:
              type: string
              description: Total number of devices matched query.
          schema:
            title: ListOfDevices
            type: array
            items:
              $ref: '#/definitions/DeviceInventory'
          examples:
            application/json:
              - id: "291ae0e5956c69c2267489213df4459d19ed48a806603def19d417d004a4b67e"
                attributes:
                  - name: "ip_addr"
                    scope: "inventory"
                    value: "1.2.3.4"
                    description: "IP address"
                  - name: "mac_addr"
                    scope: "inventory"
                    value: "00.01:02:03:04:05"
                    description: "MAC address"
                updated_ts: "2016-10-03T16:58:51.639Z"
              - id: "76f40e5956c699e327489213df4459d1923e1a806603def19d417d004a4a3ef"
                attributes:
                  - name: "mac"
                    scope: "inventory"
                    value: "00:01:02:03:04:05"
                    description: "MAC address"
                updated_ts: "2016-10-04T18:24:21.432Z"
        400:
          description: Missing or malformed request parameters.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'

definitions:
  Attribute:
    description: Attribute descriptor.
    type: object
    required:
      - name
      - scope
      - value
    properties:
      name:
        type: string
        description: |
            A human readable, unique attribute ID, e.g. 'device_type', 'ip_addr', 'cpu_load', etc.
      scope:
        type: string
        description: |
            The scope of the attribute.

            Scope is a string and acts as namespace for the attribute name.
      description:
        type: string
        description: Attribute description.
      value:
        type: string
        description: |
            The current value of the attribute.

            Attribute type is implicit, inferred from the JSON type.

            Supported types: number, string, array of numbers, array of strings.
            Mixed arrays are not allowed.
    example:
      name: "serial_no"
      scope: "inventory"
      description: "Serial number"
      value: "123456789"
  DeviceInventory:
    type: object
    properties:
      id:
        type: string
        description: Mender-assigned unique ID.
      updated_ts:
        type: string
        description: Timestamp of the most recent attribute update.
      attributes:
        type: array
        items:
          $ref: '#/definitions/Attribute'
        description: A list of attribute descriptors.
    example:
      id: "291ae0e5956c69c2267489213df4459d19ed48a806603def19d417d004a4b67e"
      attributes:
        - name: "ip_addr"
          scope: "inventory"
          value: "1.2.3.4"
          description: "IP address"
        - name: "mac_addr"
          scope: "inventory"
          value: "00.01:02:03:04:05"
          description: "MAC address"
      updated_ts: "2016-10-03T16:58:51.639Z"

  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      error: "failed to decode device group data: JSON payload is empty"
      request_id: "f7881e82-0492-49fb-b459-795654e7188a"

  FilterAttribute:
    description: Filterable attribute
    type: object
    required:
      - scope
      - name
      - count
    properties:
      name:
        type: string
        description: Name of the attribute.
      scope:
        type: string
        description: Scope of the attribute.
      count:
        type: integer
        description: Number of occurrences of the attribute in the database.
    example:
      name: "serial_no"
      scope: "inventory"
      count: 10

  FilterPredicate:
    description: Attribute filter predicate
    type: object
    required:
      - scope
      - attribute
      - type
    properties:
      attribute:
        type: string
        description: Attribute name.
      scope:
        type: string
      type:
        type: string
        description: Type or operator of the filter predicate.
        enum: [$eq]
      value:
        type: string
        description: |
            The value of the attribute to be used in filtering.
            Attribute type is implicit, inferred from the JSON type.
    example:
      attribute: "serial_no"
      scope: "inventory"
      type: "$eq"
      value: "123456789"

  SelectAttribute:
    description: Inventory attribute
    type: object
    required:
      - attribute
      - scope
    properties:
      attribute:
        type: string
        description: Attribute name.
      scope:
        type: string
        description: Attribute scope.
    example:
      attribute: "serial_no"
      scope: "inventory"

  SortCriteria:
    description: Sort criteria definition
    type: object
    required:
      - attribute
      - scope
      - order
    properties:
      attribute:
        type: string
        description: Attribute name.
      scope:
        type: string
        description: Attribute scope.
      order:
        type: string
        description: Order direction, ascending ("asc") or descending ("desc").
        enum: [asc, desc]
    example:
      attribute: "serial_no"
      scope: "inventory"
      order: "asc"
