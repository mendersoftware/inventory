variables:
  DOCKER_REPOSITORY: mendersoftware/inventory
  MULTIPLATFORM_BUILD: "true"
  MULTIPLATFORM_PLATFORMS: "linux/amd64,linux/arm64"

stages:
  - test_prep
  - test
  - build
  - publish
  - alvaldi-version-bump

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-check-golang-lint.yml'
      - '.gitlab-ci-check-golang-unittests.yml'
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-check-license.yml'
      - '.gitlab-ci-check-docker-acceptance.yml'
      - '.gitlab-ci-check-apidocs.yml'
      - '.gitlab-ci-check-docker-build.yml'
      - '.gitlab-ci-github-status-updates.yml'

test:acceptance_tests:
  script:
    - rm -f tests/coverage-acceptance*.txt
    - export TESTS_DIR=$(pwd)/tests
    - export INTEGRATION_DIR=$(pwd)/mender-integration
    - |
      for compose in $TESTS_DIR/docker-compose*.yml; do
        $TESTS_DIR/run-test-environment acceptance $INTEGRATION_DIR $compose;
      done
  after_script:
    - set -- tests/coverage-acceptance@*.txt
    - head -n 1 $1 > tests/coverage-acceptance.txt
    - |
      for cover in $@; do
        tail -n +2 $cover >> tests/coverage-acceptance.txt;
      done

# excludes non multiplatform build job
build:docker:
  rules:
    - when: never

# excludes non multiplatform build job
publish:image:
  rules:
    - when: never

# excludes non multiplatform build job
publish:image:mender:
  rules:
    - when: never

#
# Alvaldi Helm Rolling release
#
.trigger:alvaldi-helm-version-bump:
  stage: alvaldi-version-bump
  trigger:
    project: Northern.tech/NorthernTechHQ/alvaldi-helm
    strategy: depend
  variables:
    SYNC_CONTAINER_NAME: $CONTAINER_NAME
    SYNC_IMAGE_TAG: $DOCKER_PUBLISH_COMMIT_TAG
    CONTAINER: inventory
    DOCKER_PUBLISH_COMMIT_TAG: ${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}
    GITHUB_HELM_REPO: "github.com/NorthernTechHQ/alvaldi-helm.git"
    CHART_DIR: "alvaldi"

trigger:alvaldi-helm-version-bump:staging:
  extends:
    - .trigger:alvaldi-helm-version-bump
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|staging)$/'
  needs:
    - job: publish:image-multiplatform
  variables:
    SYNC_ENVIRONMENT: staging
    HELM_PATCH_VERSION: ${CI_PIPELINE_ID}-staging # pre-release version for trigger staging only deploy

trigger:alvaldi-helm-version-bump:prod:
  extends:
    - .trigger:alvaldi-helm-version-bump
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(saas-)?v[0-9]{4}\.[0-9]{2}\.[0-9]{2}(\.[a-z0-9]*)?$/
      when: manual
  variables:
    SYNC_ENVIRONMENT: prod
    HELM_PATCH_VERSION: ${CI_PIPELINE_ID}
    DOCKER_PUBLISH_COMMIT_TAG: ${CI_COMMIT_BRANCH}
  needs:
    - trigger:alvaldi-helm-version-bump:staging
